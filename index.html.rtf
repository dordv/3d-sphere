{\rtf1\ansi\ansicpg1252\cocoartf2759
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 <!DOCTYPE html>\
<html lang="en">\
<head>\
    <meta charset="UTF-8">\
    <meta name="viewport" content="width=device-width, initial-scale=1.0">\
    <title>Rotating 3D Sphere of Digits</title>\
    <style>\
        body \{ margin: 0; \}\
        canvas \{ display: block; \}\
    </style>\
</head>\
<body>\
    <canvas id="myCanvas" width="800" height="800"></canvas>\
\
    <!-- Load three.js library -->\
    <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r150/three.min.js"></script>\
    <!-- Load OrbitControls for mouse interaction -->\
    <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r150/examples/js/controls/OrbitControls.js"></script>\
    \
    <script>\
        // Setup scene, camera, and renderer\
        const scene = new THREE.Scene();\
        const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\
        const renderer = new THREE.WebGLRenderer(\{ canvas: document.getElementById('myCanvas') \});\
        renderer.setSize(window.innerWidth, window.innerHeight);\
        \
        // Controls for mouse interaction\
        const controls = new THREE.OrbitControls(camera, renderer.domElement);\
\
        // Load font and create sphere\
        const fontLoader = new THREE.FontLoader();\
        fontLoader.load('https://threejs.org/examples/fonts/helvetiker_regular.typeface.json', function (font) \{\
            const textMaterial = new THREE.MeshBasicMaterial(\{ color: 0x000000 \});\
            \
            function createText(text, x, y, z) \{\
                const textGeometry = new THREE.TextGeometry(text, \{\
                    font: font,\
                    size: 0.5,\
                    height: 0.1,\
                    curveSegments: 12,\
                \});\
                const textMesh = new THREE.Mesh(textGeometry, textMaterial);\
                textMesh.position.set(x, y, z);\
                return textMesh;\
            \}\
\
            const radius = 3;\
            const segments = 32;\
            for (let i = 0; i < segments; i++) \{\
                const phi = Math.PI * (i / segments);\
                for (let j = 0; j < segments; j++) \{\
                    const theta = 2 * Math.PI * (j / segments);\
                    const x = radius * Math.sin(phi) * Math.cos(theta);\
                    const y = radius * Math.sin(phi) * Math.sin(theta);\
                    const z = radius * Math.cos(phi);\
                    const digit = (Math.random() < 0.5) ? '0' : '1'; // Randomly choose between 0 and 1\
                    const textMesh = createText(digit, x, y, z);\
                    scene.add(textMesh);\
                \}\
            \}\
\
            camera.position.z = 10;\
\
            function animate() \{\
                requestAnimationFrame(animate);\
                scene.rotation.y += 0.01; // Rotate the sphere\
                controls.update(); // Update controls for mouse interaction\
                renderer.render(scene, camera);\
            \}\
            animate();\
        \});\
\
        window.addEventListener('resize', () => \{\
            camera.aspect = window.innerWidth / window.innerHeight;\
            camera.updateProjectionMatrix();\
            renderer.setSize(window.innerWidth, window.innerHeight);\
        \});\
    </script>\
</body>\
</html>\
}